Resources:
  Boto3Layer463A0AEA:
    Type: AWS::Lambda::LayerVersion
    Properties:
      Content:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 71935fa708b6f595452cd5b66b67e4897d4653a82adc544d0c2a2c165c8f1298.zip
      CompatibleRuntimes:
        - python3.10
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/Boto3Layer/Resource
      aws:asset:path: asset.71935fa708b6f595452cd5b66b67e4897d4653a82adc544d0c2a2c165c8f1298.zip
      aws:asset:is-bundled: false
      aws:asset:property: Content
  InvokeModelPolicy6F76D53E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: bedrock:InvokeModel
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:bedrock:"
                  - Ref: AWS::Region
                  - ::foundation-model/anthropic.claude-v2
        Version: "2012-10-17"
      PolicyName: InvokeModelPolicy6F76D53E
      Roles:
        - Ref: MyFunctionServiceRole3C357FF2
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/InvokeModelPolicy/Resource
  MyFunctionServiceRole3C357FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/MyFunction/ServiceRole/Resource
  MyFunction3BAA72D1:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: 46c24f26abc575f4718a49ec1a295357c936d89c73d1f1f3f05d7d686940a2aa.zip
      Role:
        Fn::GetAtt:
          - MyFunctionServiceRole3C357FF2
          - Arn
      Handler: index.handler
      Layers:
        - Ref: Boto3Layer463A0AEA
      Runtime: python3.10
      Timeout: 30
    DependsOn:
      - MyFunctionServiceRole3C357FF2
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/MyFunction/Resource
      aws:asset:path: asset.46c24f26abc575f4718a49ec1a295357c936d89c73d1f1f3f05d7d686940a2aa
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ServerlessLandGenAI3932CB69:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ServerlessLandGenAI
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Resource
  ServerlessLandGenAIDeploymentAB06D0199bd18db26d65736d1507b2c05681161e:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ServerlessLandGenAI3932CB69
      Description: Automatically created by the RestApi construct
    DependsOn:
      - ServerlessLandGenAItextgenPOSTD9CF9A37
      - ServerlessLandGenAItextgen7DB7CAB2
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Deployment/Resource
  ServerlessLandGenAIDeploymentStageprodD2F4F2E0:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: ServerlessLandGenAI3932CB69
      DeploymentId:
        Ref: ServerlessLandGenAIDeploymentAB06D0199bd18db26d65736d1507b2c05681161e
      StageName: prod
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/DeploymentStage.prod/Resource
  ServerlessLandGenAItextgen7DB7CAB2:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - ServerlessLandGenAI3932CB69
          - RootResourceId
      PathPart: text_gen
      RestApiId:
        Ref: ServerlessLandGenAI3932CB69
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Default/text_gen/Resource
  ServerlessLandGenAItextgenPOSTApiPermissionApigwLambdaBedrockStackServerlessLandGenAIF613D839POSTtextgenCAEF386D:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ServerlessLandGenAI3932CB69
            - /
            - Ref: ServerlessLandGenAIDeploymentStageprodD2F4F2E0
            - /POST/text_gen
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Default/text_gen/POST/ApiPermission.ApigwLambdaBedrockStackServerlessLandGenAIF613D839.POST..text_gen
  ServerlessLandGenAItextgenPOSTApiPermissionTestApigwLambdaBedrockStackServerlessLandGenAIF613D839POSTtextgen7F67980E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - MyFunction3BAA72D1
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: ServerlessLandGenAI3932CB69
            - /test-invoke-stage/POST/text_gen
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Default/text_gen/POST/ApiPermission.Test.ApigwLambdaBedrockStackServerlessLandGenAIF613D839.POST..text_gen
  ServerlessLandGenAItextgenPOSTD9CF9A37:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      ResourceId:
        Ref: ServerlessLandGenAItextgen7DB7CAB2
      RestApiId:
        Ref: ServerlessLandGenAI3932CB69
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - MyFunction3BAA72D1
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/ServerlessLandGenAI/Default/text_gen/POST/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/1WPQW+DMAyFf0vvIdvgsmvLtNOmISrtWrnBpS6QIOwIIcR/nxKYVE7ve3ae7aT6PdWvBxg5MVWTtHTV81nANApGvswtdNcK9PwFEw6/ODA5q/Kb3flPb41sjWcucOiIw5NFcXYBZhTWxyCKM33ypkE5AaMi6PRcuJbMFIMrla7FYIMuCnqqQXCESc8lshx7is0NP7Bv3dShlVB9cmeBOo5ZoUR2fjAY9/6bbdDK3yh3V4XSSsui4s0hT7behX689F528fxmc2crkvjvYpK7sy+Zfkt1engwUTJ4K9ShLlf9AyBqMtqCAQAA
    Metadata:
      aws:cdk:path: ApigwLambdaBedrockStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Outputs:
  ServerlessLandGenAIEndpoint41934CF9:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: ServerlessLandGenAI3932CB69
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: ServerlessLandGenAIDeploymentStageprodD2F4F2E0
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - af-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

